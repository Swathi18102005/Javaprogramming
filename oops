//syntax for creating objext
import java.util.Scanner;
public class Main {
        int x =5;
        public static void main(String[] args) {
        Main obj =new  Main();
        System.out.println(obj.x);
        
    }
}

//check
class person{
    String n;
    
    public person(String n) {
        this.n = n;
    }
    
    @Override
    public String toString() {
        return "person{name;'" + n + "'}";
    }
    
        public static void main(String[]args) {
            
            person p = new person("swathi");
            
            System.out.println(p.toString());
        }
}

//inheritance
// Parent class
class Cars {
    void sound() {
        System.out.println("Cars make a sound");
    }
}

// Child class
class BMW extends Cars {
    void sound() {
        System.out.println("BMW");
    }
}

// Child class
class Audi extends Cars {
    void sound() {
        System.out.println("Audi");
    }
}

// Child class
class Benz extends Cars {
    void sound() {
        System.out.println("Benz");
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        Cars a;
        
        a = new BMW();
        a.sound();
        
        a = new Audi();
        a.sound();
        
        a = new Benz();
        a.sound();
    }
}

//user input
import java.util.Scanner;
//parent class or base class
class parent{
    void name(){
        System.out.println("Family Details");
    }
}

//child class or sub class
class grandpa extends parent{
    void name(String N){
        System.out.println("GrandFather:"
        +N);
    }
}
class grandma extends parent{
    void name(String N){
        System.out.println("GrandMother:"+N);
    }
}public class Main
{
	public static void main(String[] args) {
	    
	    grandpa gp= new grandpa();
	    
	    Scanner n= new Scanner(System.in);
	    System.out.println("Enter grandfather name:");
	    String grandpaName=n.nextLine();
	    gp.name(grandpaName);
	    System.out.println("Enter grandmother name:");
		String grandmaName=n.nextLine();
	    grandma gm= new grandma();
	    gm.name(grandmaName);}}
